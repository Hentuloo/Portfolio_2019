{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/atoms/Paragraph/Paragraph.js","webpack:///./src/components/molecules/Markdown/Markdown.js","webpack:///./src/views/Portfolio.js","webpack:///./src/views/Kontakt.js","webpack:///./src/components/molecules/ProjectBox/ProjectBox.js","webpack:///./src/views/Projekty.js","webpack:///./src/pages/SwitchPage.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","Paragraph","styled","p","withConfig","displayName","componentId","_ref","theme","bold","font","light","Wrapper","div","graySecond","_ref2","xxs","_ref3","xs","Markdown","_ref4","markdown","dangerouslySetInnerHTML","__html","imageAnimation","keyframes","opacity","MarkdownWrapper","ImageWrapper","HeaderName","l","Portfolio","_data$portfolio$mainP","portfolio","mainPages","content","photo","as","graphcms_image_default","image","maxWidth","fadeIn","blurryPlaceholder","backgroundColor","molecules_Markdown_Markdown","objectOf","Object","defaultProps","views_Portfolio","gatsby_browser_entry_StaticQuery","Portfolio_Portfolio","_3927641818","Button","button","redFirst","Textarea","textarea","InputEmail","input","InputName","redThird","Form","form","_ref5","m","section","Kontakt","_React$createElement","Kontakt_Wrapper","name","method","data-netlify","data-nelify-honeypot","type","placeholder","nmae","Icons","Description","s","Links","xxxs","TitleLinks","_ref6","TittleWrapper","ProjectImage","_ref7","grayFirst","_ref8","grayDark","_ref9","ProjectBox","_ref10","title","description","gitLink","liveLink","technologies","ProjectBox_Wrapper","alt","target","rel","href","map","e","key","id","fileName","arrayOf","fromLeft","fromRight","ProjektyAnimatedBox","even","css","animationDelay","ProjektyWrapper","Projekty","projects","projectses","markdownContent","projectsPages","Projekty_Wrapper","Projekty_MarkdownWrapper","animationStartFrom","Delay","i","molecules_ProjectBox_ProjectBox","ProjectsBoxes","views_Projekty","Projekty_Projekty","_2005820954","SwitchPage","page","views_Kontakt","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-switch-page-js-b5e63fc9f50e8b851cd0.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import styled from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\n  text-transform: uppercase;\r\n  font-weight: ${({ theme, bold }) =>\r\n    bold ? theme.font.bold : theme.font.light};\r\n`;\r\nexport default Paragraph;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Wrapper = styled.div`\r\n  white-space: pre-wrap;\r\n  font-family: 'Rhodium Libre', serif;\r\n  background-color: ${({ theme }) => theme.graySecond};\r\n  font-size: ${({ theme }) => theme.font.xxs};\r\n  line-height: ${({ theme }) => theme.font.xs};\r\n  padding: 4px 10px;\r\n`;\r\nconst Markdown = ({ markdown }) => (\r\n  <Wrapper dangerouslySetInnerHTML={{ __html: markdown }} />\r\n);\r\n\r\nMarkdown.propTypes = {\r\n  markdown: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Markdown;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport GraphImg from 'graphcms-image';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport Markdown from 'components/molecules/Markdown/Markdown';\r\n\r\nconst imageAnimation = keyframes`\r\nform{\r\n  transform:translateY(-100%);\r\n}\r\nto{\r\n  transform:translateY(0%);\r\n}\r\n`;\r\nconst opacity = keyframes`\r\nfrom{\r\nopacity:0;\r\n}\r\nto{\r\nopacity:1;\r\n}\r\n`;\r\n\r\nconst MarkdownWrapper = styled.div`\r\n  position: absolute;\r\n  width: 90%;\r\n  bottom: 100px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0%);\r\n  opacity: 0;\r\n  animation: ${opacity} 0.5s 0.6s linear forwards;\r\n`;\r\nconst ImageWrapper = styled.div`\r\n  position: absolute;\r\n  top: 6%;\r\n  right: 7%;\r\n  width: 40%;\r\n  height: 40%;\r\n  overflow: hidden;\r\n  img {\r\n    position: absolute;\r\n    max-width: 100%;\r\n    max-height: 80vh;\r\n    transform: translateY(-100%);\r\n    will-change: transform;\r\n    animation: ${imageAnimation} 0.5s 0.6s ease-in-out forwards;\r\n  }\r\n`;\r\nconst HeaderName = styled(Paragraph)`\r\n  width: 50%;\r\n  margin: 5% 2%;\r\n  word-spacing: 50px;\r\n  font-size: ${({ theme }) => theme.font.l};\r\n  line-height: ${({ theme }) => theme.font.l};\r\n`;\r\n\r\nconst Portfolio = ({ data }) => {\r\n  const { content, photo } = data.portfolio.mainPages[0];\r\n  return (\r\n    <section>\r\n      <HeaderName as=\"h2\">Kamil Chędkowski</HeaderName>\r\n      <ImageWrapper>\r\n        <GraphImg\r\n          image={photo}\r\n          maxWidth={600}\r\n          fadeIn={false}\r\n          blurryPlaceholder={false}\r\n          backgroundColor={false}\r\n        />\r\n      </ImageWrapper>\r\n      <MarkdownWrapper>\r\n        <Markdown markdown={content} />\r\n      </MarkdownWrapper>\r\n    </section>\r\n  );\r\n};\r\nPortfolio.propTypes = {\r\n  data: PropTypes.objectOf(Object),\r\n};\r\nPortfolio.defaultProps = {\r\n  data: null,\r\n};\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      {\r\n        portfolio {\r\n          mainPages {\r\n            content\r\n            photo {\r\n              handle\r\n              width\r\n              height\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Portfolio data={data} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  border: 0px;\r\n\r\n  background-color: ${({ theme }) => theme.redFirst};\r\n`;\r\nconst Textarea = styled.textarea`\r\n  background-color: ${({ theme }) => theme.graySecond};\r\n  height: 120px;\r\n`;\r\nconst InputEmail = styled.input`\r\n  background-color: ${({ theme }) => theme.graySecond};\r\n`;\r\nconst InputName = styled.input`\r\n  background-color: ${({ theme }) => theme.redThird};\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  min-height: 75vh;\r\n  margin: 5vh 0px 0px 0px;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  color: black;\r\n\r\n  input,\r\n  textarea,\r\n  button {\r\n    min-height: 40px;\r\n    border: none;\r\n    font-size: ${({ theme }) => theme.font.m};\r\n\r\n    font-family: 'Baloo Tamma', cursive;\r\n  }\r\n  input::placeholder,\r\n  textarea::placeholder {\r\n    color: black;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\nconst Wrapper = styled.section`\r\n  width: 80%;\r\n  margin: 0px auto;\r\n`;\r\nconst Kontakt = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Form\r\n        name=\"portfolioContact\"\r\n        method=\"post\"\r\n        data-netlify=\"true\"\r\n        data-nelify-honeypot=\"bot-field\"\r\n        method=\"post\"\r\n      >\r\n        <InputName type=\"text\" name=\"name\" placeholder=\"Imie:\" />\r\n        <InputEmail type=\"email\" name=\"email\" placeholder=\"Email:\" />\r\n        <Textarea nmae=\"message\" placeholder=\"Treść wiadomości\" />\r\n        <Button>Wyślij</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Kontakt;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport GraphImg from 'graphcms-image';\r\n\r\nconst Icons = styled.div`\r\n  flex-basis: 100%;\r\n  height: 25px;\r\n  display: flex;\r\n  flex-wrap: wrap-reverse;\r\n  justify-content: flex-end;\r\n  position: relative;\r\n  padding: 3px 8px;\r\n\r\n  div {\r\n    width: 25px;\r\n    height: 25px;\r\n    margin: 0px 2px;\r\n  }\r\n  img {\r\n    width: 100%;\r\n  }\r\n`;\r\nconst Description = styled.div`\r\n  flex-basis: 100%;\r\n  margin: 5px 5px 8px 3px;\r\n  font-size: ${({ theme }) => theme.font.xxs};\r\n  line-height: ${({ theme }) => theme.font.s};\r\n`;\r\nconst Links = styled.div`\r\n  text-transform: uppercase;\r\n  font-size: ${({ theme }) => theme.font.xxxs};\r\n  a {\r\n    display: inline-block;\r\n    height: 30px;\r\n    text-decoration: none;\r\n    background-color: white;\r\n    padding: 0px 4px;\r\n    margin: 6px 4px;\r\n    color: black;\r\n    line-height: 30px;\r\n  }\r\n`;\r\nconst TitleLinks = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  height: 50px;\r\n  text-align: center;\r\n  font-size: ${({ theme }) => theme.font.xs};\r\n  line-height: ${({ theme }) => theme.font.s};\r\n  h2 {\r\n    flex-basis: 100%;\r\n    font-family: 'Baloo Tamma', cursive;\r\n    font-size: ${({ theme }) => theme.font.xs};\r\n    text-transform: uppercase;\r\n    margin: 0px;\r\n  }\r\n`;\r\nconst TittleWrapper = styled.div`\r\n  flex-basis: 45%;\r\n  padding-left: 10px;\r\n  padding: 7px;\r\n`;\r\nconst ProjectImage = styled.div`\r\n  position: relative;\r\n  flex-basis: 55%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  background-color: white;\r\n  overflow: hidden;\r\n  img {\r\n    position: absolute;\r\n    max-width: 100%;\r\n    top: 50%;\r\n    left: 50%;\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  min-height: 130px;\r\n  background-color: ${({ theme }) => theme.grayFirst};\r\n  box-shadow: 0 0 20px 1px ${({ theme }) => theme.grayDark};\r\n  border: 1px solid ${({ theme }) => theme.grayDark};\r\n  border-radius: 5px;\r\n  font-family: 'Rhodium Libre', serif;\r\n  overflow: hidden;\r\n`;\r\nconst ProjectBox = ({ data }) => {\r\n  const { title, description, gitLink, liveLink, photo, technologies } = data;\r\n  return (\r\n    <Wrapper>\r\n      <ProjectImage>\r\n        <GraphImg image={photo} maxWidth={600} alt={title} />\r\n      </ProjectImage>\r\n      <TittleWrapper>\r\n        <TitleLinks>\r\n          <h2>{title}</h2>\r\n          <Links>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={gitLink}>\r\n              Github\r\n            </a>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" s href={liveLink}>\r\n              LIVE\r\n            </a>\r\n          </Links>\r\n        </TitleLinks>\r\n      </TittleWrapper>\r\n      <Description>{description}</Description>\r\n      <Icons>\r\n        {technologies.map(e => (\r\n          <GraphImg key={e.id} image={e} alt={e.fileName} maxWidth={100} />\r\n        ))}\r\n      </Icons>\r\n    </Wrapper>\r\n  );\r\n};\r\nProjectBox.propTypes = {\r\n  data: PropTypes.arrayOf(Object),\r\n};\r\nProjectBox.defaultProps = {\r\n  data: null,\r\n};\r\nexport default ProjectBox;\r\n","import React from 'react';\r\nimport styled, { keyframes, css } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport ProjectBox from 'components/molecules/ProjectBox/ProjectBox';\r\nimport Markdown from 'components/molecules/Markdown/Markdown';\r\n\r\nconst opacity = keyframes`\r\nfrom{\r\nopacity:0;\r\n}\r\nto{\r\nopacity:1;\r\n}\r\n`;\r\nconst fromLeft = keyframes`\r\nfrom{\r\n  transform: translateX(-130%);\r\n}\r\nto{\r\n   transform:translateX(0%);\r\n}\r\n`;\r\nconst fromRight = keyframes`\r\nfrom{\r\n  transform: translateX(130%);\r\n}\r\nto{\r\n   transform:translateX(0%);\r\n}\r\n`;\r\nconst ProjektyAnimatedBox = styled.div`\r\n  ${({ even }) =>\r\n    even &&\r\n    css`\r\n      transform: translateX(-130%);\r\n      animation: ${fromLeft} 0.6s ${({ animationDelay }) => animationDelay}\r\n        linear forwards;\r\n    `}\r\n  ${({ even }) =>\r\n    !even &&\r\n    css`\r\n      transform: translateX(130%);\r\n      animation: ${fromRight} 0.6s ${({ animationDelay }) => animationDelay}\r\n        linear forwards;\r\n    `}\r\n`;\r\nconst MarkdownWrapper = styled.div`\r\n  width: 90%;\r\n  margin: 0px auto;\r\n  opacity: 0;\r\n  animation: ${opacity} 0.5s 0.6s linear forwards;\r\n`;\r\nconst ProjektyWrapper = styled.section`\r\n  display: block;\r\n  margin-bottom: 150px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding: 0px 20px;\r\n  & > div {\r\n    margin: 30px 0px;\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 110vh;\r\n  margin: 40px auto 0px auto;\r\n`;\r\n\r\nconst ProjectsBoxes = (data, animationStartFrom, animationDelay) => {\r\n  let Delay = animationStartFrom;\r\n  const projects = data.map((e, i) => {\r\n    Delay += animationDelay;\r\n    if (i < 2) {\r\n      return (\r\n        <ProjektyAnimatedBox\r\n          key={e.id}\r\n          even={i % 2 === 0}\r\n          animationDelay={`${Delay}s`}\r\n        >\r\n          <ProjectBox data={e} />\r\n        </ProjektyAnimatedBox>\r\n      );\r\n    }\r\n    return (\r\n      <ProjektyAnimatedBox key={e.id}>\r\n        <ProjectBox data={e} />\r\n      </ProjektyAnimatedBox>\r\n    );\r\n  });\r\n  return projects;\r\n};\r\n\r\nconst Projekty = ({ data }) => {\r\n  const projects = data.portfolio.projectses;\r\n  const markdownContent = data.portfolio.projectsPages[0].content;\r\n  return (\r\n    <Wrapper>\r\n      <MarkdownWrapper>\r\n        <Markdown markdown={markdownContent} />\r\n      </MarkdownWrapper>\r\n      <ProjektyWrapper>{ProjectsBoxes(projects, 0.3, 0.2)}</ProjektyWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nProjekty.propTypes = {\r\n  data: PropTypes.objectOf(Object),\r\n};\r\nProjekty.defaultProps = {\r\n  data: null,\r\n};\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      {\r\n        portfolio {\r\n          projectsPages {\r\n            content\r\n          }\r\n          projectses(orderBy: index_DESC) {\r\n            id\r\n            title\r\n            description\r\n            gitLink\r\n            liveLink\r\n            technologies {\r\n              id\r\n              handle\r\n              width\r\n              height\r\n              fileName\r\n            }\r\n            photo {\r\n              handle\r\n              width\r\n              height\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Projekty data={data} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Portfolio from 'views/Portfolio';\r\nimport Kontakt from 'views/Kontakt';\r\nimport Projekty from 'views/Projekty';\r\n\r\nconst SwitchPage = ({ page }) => {\r\n  if (page === 'portfolio') {\r\n    return <Portfolio />;\r\n  }\r\n  if (page === 'kontakt') {\r\n    return <Kontakt />;\r\n  }\r\n  if (page === 'projekty') {\r\n    return <Projekty />;\r\n  }\r\n  return null;\r\n};\r\nSwitchPage.propTypes = {\r\n  page: PropTypes.string,\r\n};\r\nSwitchPage.defaultProps = {\r\n  page: null,\r\n};\r\nexport default SwitchPage;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}